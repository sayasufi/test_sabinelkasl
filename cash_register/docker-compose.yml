version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate && python shop/populate_items.py && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./media:/app/media  # Связываем локальную папку media с папкой в контейнере
      - ./static:/app/static  # Связываем локальную папку static с папкой в контейнере
    expose:
      - "8000"  # Это нужно, чтобы Nginx мог подключаться к контейнеру web
    depends_on:
      db:
        condition: service_healthy
    environment:
      DEBUG: "True"
      DB_NAME: mydatabase
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: db
      POPULATE_DB: "True"
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./media:/app/media  # Связываем локальную папку media с папкой в контейнере Nginx
      - ./static:/app/static  # Связываем локальную папку static с папкой в контейнере Nginx
    depends_on:
      web:
        condition: service_started
    restart: always

volumes:
  postgres_data: